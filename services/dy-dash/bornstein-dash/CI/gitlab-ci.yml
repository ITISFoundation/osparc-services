image: itisfoundation/gitlab-runner-docker:stable
variables:
  # docker in docker variant, see https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  # have some prefix so it may help for garbage collecting in the registry
  SC_CI_TEST_IMAGE_PREFIX: $SC_CI_TESTING_REGISTRY/ci/$CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG
services:
   - docker:dind
before_script:
  - docker info
# --------------------------------------------------------------------------------------------
# ------- bornstein-dash
# --------------------------------------------------------------------------------------------
bornstein-dash-build:
  stage: build
  except:
    - staging
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - cd services/bornstein-dash
    - export DOCKER_REGISTRY=$SC_CI_MASTER_REGISTRY
    - make pull
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make build
    - make push

bornstein-dash-unit-test:
  stage: test
  except:
    - staging
  script:
    - pip install -r services/bornstein-dash/tests/requirements.txt
    - cd services/bornstein-dash
    - make unit-test
  artifacts:
    reports:
      junit:
        - services/bornstein-dash/pytest_unittest.xml
    paths:
      - services/bornstein-dash/pytest_unittest.xml

bornstein-dash-integration-test:
  stage: test
  except:
    - staging
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - pip install -r services/bornstein-dash/tests/requirements.txt
    - cd services/bornstein-dash
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make pull
    - make integration-test
  artifacts:
    reports:
      junit:
        - services/bornstein-dash/pytest_integrationtest.xml
    paths:
      - services/bornstein-dash/pytest_integrationtest.xml

bornstein-dash-master:
  stage: deploy
  only:
    - master
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - echo "$SC_CI_MASTER_REGISTRY_PASSWORD" | docker login -u "$SC_CI_MASTER_REGISTRY_USER" --password-stdin $SC_CI_MASTER_REGISTRY
    - cd services/bornstein-dash
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make pull
    - docker tag $SC_CI_TEST_IMAGE_PREFIX/simcore/services/comp/bornstein-dash $SC_CI_MASTER_REGISTRY/simcore/services/comp/bornstein-dash
    - export DOCKER_REGISTRY=$SC_CI_MASTER_REGISTRY
    - make push
  environment:
    name: master
    url: $SC_CI_MASTER_REGISTRY

bornstein-dash-staging:
  stage: deploy
  only:
    - staging
  script:
    - echo "$SC_CI_MASTER_REGISTRY_PASSWORD" | docker login -u "$SC_CI_MASTER_REGISTRY_USER" --password-stdin $SC_CI_MASTER_REGISTRY
    - echo "$SC_CI_STAGING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_STAGING_REGISTRY_USER" --password-stdin $SC_CI_STAGING_REGISTRY
    - cd services/bornstein-dash
    - export DOCKER_REGISTRY=$SC_CI_MASTER_REGISTRY
    - make pull
    - docker tag $SC_CI_MASTER_REGISTRY/simcore/services/comp/bornstein-dash $SC_CI_STAGING_REGISTRY/simcore/services/comp/bornstein-dash
    - export DOCKER_REGISTRY=$SC_CI_STAGING_REGISTRY
    - make push-release
  environment:
    name: production
    url: $SC_CI_STAGING_REGISTRY
