version: '3.4'
services:
  mattward-dash:
    image: ${DOCKER_REGISTRY}/mattward-viewer-dash:${DOCKER_IMAGE_TAG}
    build:
      context: .
      dockerfile: mattward/Dockerfile
      target: production
      args:
        BASE_IMAGE: ${BASE_IMAGE}
        APP_NAME: mattward.py
      labels:
        io.simcore.key: '{"key": "simcore/services/dynamic/mattward-viewer-dash"}'
        io.simcore.version: '{"version": "${DOCKER_IMAGE_TAG}"}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.name: '{"name": "mattward-viewer-dash"}'
        io.simcore.description: '{"description": "Graph viewer for data generated by mattward solver"}'
        io.simcore.authors: '{"authors": [{"name": "Odei Maiz", "email": "maiz@itis.ethz.ch", "affiliation": "ITIS Foundation"}]}'
        io.simcore.contact: '{"contact": "maiz@itis.ethz.ch"}'
        io.simcore.inputs: '{"inputs": {}}'
        io.simcore.outputs: '{"outputs": {
          "input": {"label": "Input data", "displayOrder": 0, "description": "Input data csv", "type": "data:text/csv", "fileToKeyMap": {"input.csv": "input"}},
          "t_plot": {"label": "Output time", "displayOrder": 1, "description": "Output time data csv", "type": "data:text/csv", "fileToKeyMap": {"t_plot.csv": "t_plot"}},
          "CV_plot": {"label": "Output conductivity", "displayOrder": 2, "description": "Output conductivity data csv", "type": "data:text/csv", "fileToKeyMap": {"CV_plot.csv": "CV_plot"}},
          "Ist_plot": {"label": "Output Ist", "displayOrder": 3, "description": "Output Ist data csv", "type": "data:text/csv", "fileToKeyMap": {"Ist_plot.csv": "Ist_plot"}},
          "tst_plot": {"label": "Output tst", "displayOrder": 4, "description": "Output tst data csv", "type": "data:text/csv", "fileToKeyMap": {"tst_plot.csv": "tst_plot"}},
          "CAP_plot": {"label": "Output CAP", "displayOrder": 5, "description": "Output CAP data csv", "type": "data:text/csv", "fileToKeyMap": {"CAP_plot.csv": "CAP_plot"}},
          "Vpred_plot": {"label": "Output V pred", "displayOrder": 6, "description": "Output V pred data csv", "type": "data:text/csv", "fileToKeyMap": {"V_pred_plot.csv": "Vpred_plot"}},
          "Lpred_plot": {"label": "Output L pred", "displayOrder": 7, "description": "Output L pred data csv", "type": "data:text/csv", "fileToKeyMap": {"Lpred_plot.csv": "Lpred_plot"}}
          }}'
        simcore.service.settings: '[
          {"name": "ports", "type": "int", "value": 8888},
          {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]}]'
        # simcore.service.bootsettings: '[
        #   {"name": "entry_point", "type": "string", "value": "?token=simcore"}]'
        org.label-schema.schema-version: "1.0"
        org.label-schema.build-date: "${BUILD_DATE}"
        org.label-schema.vcs-url: "${VCS_URL}"
        org.label-schema.vcs-ref: "${VCS_REF}"
    ports:
      - '1238:8888'
  bornstein:
    image: ${DOCKER_REGISTRY}/bornstein-viewer:${DOCKER_IMAGE_TAG}
    build:
      context: .
      dockerfile: bornstein/Dockerfile
      target: production
      args:
        BASE_IMAGE: ${BASE_IMAGE}
        APP_NAME: bornstein.py
      labels:
        io.simcore.key: '{"key": "simcore/services/dynamic/bornstein-viewer"}'
        io.simcore.version: '{"version": "${DOCKER_IMAGE_TAG}"}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.name: '{"name": "bornstein-viewer"}'
        io.simcore.description: '{"description": "Graph viewer for data generated by bornstein solver"}'
        io.simcore.authors: '{"authors": [{"name": "Odei Maiz", "email": "maiz@itis.ethz.ch", "affiliation": "ITIS Foundation"}]}'
        io.simcore.contact: '{"contact": "maiz@itis.ethz.ch"}'
        io.simcore.inputs: '{"inputs": {}}'
        io.simcore.outputs: '{"outputs": {
          "pkl": {"label": "Input data", "displayOrder": 0, "description": "Input data pkl", "type": "data:pkl", "fileToKeyMap": {"traces.pkl": "traces"}},
          "output": {"label": "Output data", "displayOrder": 1, "description": "Output data csv", "type": "data:text/csv", "fileToKeyMap": {"output.csv": "output"}},
          }}'
        simcore.service.settings: '[
          {"name": "ports", "type": "int", "value": 8888},
          {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]}]'
        # simcore.service.bootsettings: '[
        #   {"name": "entry_point", "type": "string", "value": "?token=simcore"}]'
        org.label-schema.schema-version: "1.0"
        org.label-schema.build-date: "${BUILD_DATE}"
        org.label-schema.vcs-url: "${VCS_URL}"
        org.label-schema.vcs-ref: "${VCS_REF}"
    ports:
      - '1239:8888'
