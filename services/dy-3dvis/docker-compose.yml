version: '2.3'
services:
  simcore-paraviewweb:
    image: ${DOCKER_REGISTRY}/3d-viewer:${DOCKER_IMAGE_TAG}
    init: true
    build:
      context: ../../
      dockerfile: services/dy-3dvis/simcoreparaviewweb/Dockerfile
      target: production
      args:
        BASE_IMAGE: kitware/paraviewweb:pv-v5.6.0-osmesa
        VISUALIZER_VERSION: v3.1.6
      labels:
        io.simcore.key: '{"key": "simcore/services/dynamic/3d-viewer"}'
        io.simcore.version: '{"version": "${DOCKER_IMAGE_TAG}"}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.name: '{"name": "3d-viewer"}'
        io.simcore.description: '{"description": "Paraview Web-based Visualizer"}'
        io.simcore.authors: '{"authors": [
                              {"name": "Sylvain Anderegg", "email": "anderegg@itis.swiss",
                              "affiliation": "ITIS Foundation"}
                            ]}'
        io.simcore.contact: '{"contact": "anderegg@itis.swiss"}'
        io.simcore.inputs: '{"inputs": {
                              "A":
                                {"displayOrder":1, "label": "A",
                                "description": "Any paraview compatible dataset. 1 dataset or N dataset compressed in a zip file.",
                                "type": "data:*/*"},
                              "B":{"displayOrder":2, "label": "B",
                              "description": "Any paraview compatible dataset. 1 dataset or N dataset compressed in a zip file.",
                              "type": "data:*/*"}}
                            }'
        io.simcore.outputs: '{"outputs": {}}'
        simcore.service.settings: '[
                                    {"name": "ports", "type": "int", "value": 8777},
                                    {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]},
                                    {"name": "resources", "type": "resources", "value":
                                      {
                                        "Limits": {
                                          "NanoCPUs": 4000000000,
                                          "MemoryBytes": 16777216
                                        },
                                        "Reservations": {
                                          "NanoCPUs": 1000000000,
                                          "MemoryBytes": 2097152
                                        }
                                      }
                                    }
                                  ]'
        simcore.service.bootsettings: '[]'
        org.label-schema.schema-version: "1.0"
        org.label-schema.build-date: "${BUILD_DATE}"
        org.label-schema.vcs-url: "${VCS_URL}"
        org.label-schema.vcs-ref: "${VCS_REF}"

    ports:
      - '8777:8777'
  #--------------------------------------------------------------------
  simcore-paraviewweb-gpu:
    image: ${DOCKER_REGISTRY}/3d-viewer-gpu:${DOCKER_IMAGE_TAG}
    init: true
    build:
      context: ../../
      dockerfile: services/dy-3dvis/simcoreparaviewweb/Dockerfile
      target: production
      args:
        BASE_IMAGE: kitware/paraviewweb:pv-v5.6.0-egl
        VISUALIZER_VERSION: v3.1.6
      labels:
        io.simcore.key: '{"key": "simcore/services/dynamic/3d-viewer-gpu"}'
        io.simcore.version: '{"version": "${DOCKER_IMAGE_TAG}"}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.name: '{"name": "3d-viewer-gpu"}'
        io.simcore.description: '{"description": "Paraview Web-based Visualizer GPU accelerated"}'
        io.simcore.authors: '{"authors": [
                              {"name": "Sylvain Anderegg", "email": "anderegg@itis.swiss",
                              "affiliation": "ITIS Foundation"}
                            ]}'
        io.simcore.contact: '{"contact": "anderegg@itis.swiss"}'
        io.simcore.inputs: '{"inputs": {
                              "A":
                                {"displayOrder":1, "label": "1 dataset or n dataset in a zip",
                                "description": "Any paraview compatible dataset. Any number can be compressed in a zip file.",
                                "type": "data:*/*"},
                              "B":{"displayOrder":2, "label": "1 dataset or n dataset in a zip",
                              "description": "Any paraview compatible dataset. Any number can be compressed in a zip file.",
                              "type": "data:*/*"}}
                            }'
        io.simcore.outputs: '{"outputs": {}}'
        simcore.service.settings: '[
                                    {"name": "ports", "type": "int", "value": 8777},
                                    {"name": "constraints", "type": "string", "value": [
                                      "node.platform.os == linux"
                                      ]},
                                    {"name": "Resources", "type": "Resources", "value":
                                      {
                                      "Limits": {
                                        "NanoCPUs": 4000000000,
                                        "MemoryBytes": 16777216
                                      },
                                      "Reservations":
                                        {
                                          "NanoCPUs": 1000000000,
                                          "MemoryBytes": 2097152,
                                          "GenericResources": [
                                            {
                                               "DiscreteResourceSpec": {
                                                "Kind": "VRAM",
                                                "Value": 1
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]'
        simcore.service.bootsettings: '[]'
        org.label-schema.schema-version: "1.0"
        org.label-schema.build-date: "${BUILD_DATE}"
        org.label-schema.vcs-url: "${VCS_URL}"
        org.label-schema.vcs-ref: "${VCS_REF}"
    runtime: nvidia
    ports:
      - '8778:8778'

