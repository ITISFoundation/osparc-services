version: '3.6'
services:
  httpbin:
    image: ${DOCKER_REGISTRY}/httpbin:${DOCKER_IMAGE_TAG}
    build:
      context: ../../
      dockerfile: services/httpbin/legacy/Dockerfile
      labels:
        io.simcore.key: '{"key": "simcore/services/dynamic/httpbin"}'
        io.simcore.version: '{"version": "${DOCKER_IMAGE_TAG}"}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.name: '{"name": "httpbin"}'
        io.simcore.description: '{"description": "Used to boot in legacy mode"}'
        io.simcore.authors: '{"authors": [{"name": "Andrei Neagu", "email": "neagu@itis.swiss", "affiliation": "ITIS Foundation"}]}'
        io.simcore.contact: '{"contact": "neagu@itis.swiss"}'
        io.simcore.inputs: '{"inputs": {}}'
        io.simcore.outputs: '{"outputs": {}}'
        simcore.service.settings: '[{"name": "resources", "type": "Resources", "value": {"mem_limit":17179869184, "cpu_limit": 4000000000}}, {"name": "ports", "type": "int", "value": 80}, {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]}]'
        org.label-schema.schema-version: "1.0"
        org.label-schema.build-date: "${BUILD_DATE}"
        org.label-schema.vcs-url: "${VCS_URL}"
        org.label-schema.vcs-ref: "${VCS_REF}"
  httpbin-dynamic-sidecar:
      image: ${DOCKER_REGISTRY}/httpbin-dynamic-sidecar:${DOCKER_IMAGE_TAG}
      build:
        context: ../../
        dockerfile: services/httpbin/Dockerfile
        labels:
          io.simcore.key: '{"key": "simcore/services/dynamic/httpbin-dynamic-sidecar"}'
          io.simcore.version: '{"version": "${DOCKER_IMAGE_TAG}"}'
          io.simcore.type: '{"type": "dynamic"}'
          io.simcore.name: '{"name": "httpbin-dynamic-sidecar"}'
          io.simcore.description: '{"description": "Boot with dynaic-sidecar using service key and version"}'
          io.simcore.authors: '{"authors": [{"name": "Andrei Neagu", "email": "neagu@itis.swiss", "affiliation": "ITIS Foundation"}]}'
          io.simcore.contact: '{"contact": "neagu@itis.swiss"}'
          io.simcore.inputs: '{"inputs": {}}'
          io.simcore.outputs: '{"outputs": {}}'
          simcore.service.settings: '[{"name": "resources", "type": "Resources", "value": {"mem_limit":17179869184, "cpu_limit": 4000000000}}, {"name": "ports", "type": "int", "value": 80}, {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]}]'
          simcore.service.boot-mode: "dynamic-sidecar"
          simcore.service.paths-mapping: '{"outputs_path": "/tmp/outputs", "inputs_path": "/tmp/inputs"}'
          org.label-schema.schema-version: "1.0"
          org.label-schema.build-date: "${BUILD_DATE}"
          org.label-schema.vcs-url: "${VCS_URL}"
          org.label-schema.vcs-ref: "${VCS_REF}"

  httpbin-dynamic-sidecar-compose:
      image: ${DOCKER_REGISTRY}/httpbin-dynamic-sidecar-compose:${DOCKER_IMAGE_TAG}
      build:
        context: ../../
        dockerfile: services/httpbin/Dockerfile
        labels:
          io.simcore.key: '{"key": "simcore/services/dynamic/httpbin-dynamic-sidecar-compose"}'
          io.simcore.version: '{"version": "${DOCKER_IMAGE_TAG}"}'
          io.simcore.type: '{"type": "dynamic"}'
          io.simcore.name: '{"name": "httpbin-dynamic-sidecar-compose"}'
          io.simcore.description: '{"description": "Boot with dynaic-sidecar via docker-compose spec"}'
          io.simcore.authors: '{"authors": [{"name": "Andrei Neagu", "email": "neagu@itis.swiss", "affiliation": "ITIS Foundation"}]}'
          io.simcore.contact: '{"contact": "neagu@itis.swiss"}'
          io.simcore.inputs: '{"inputs": {}}'
          io.simcore.outputs: '{"outputs": {}}'
          simcore.service.settings: '[{"name": "resources", "type": "Resources", "value": {"mem_limit":17179869184, "cpu_limit": 4000000000}}, {"name": "ports", "type": "int", "value": 80}, {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]}]'
          simcore.service.boot-mode: "dynamic-sidecar"
          simcore.service.paths-mapping: '{"outputs_path": "/tmp/outputs", "inputs_path": "/tmp/inputs"}'
          simcore.service.target-container: "httpbin-docker-compose-spec"
          org.label-schema.schema-version: "1.0"
          org.label-schema.build-date: "${BUILD_DATE}"
          org.label-schema.vcs-url: "${VCS_URL}"
          org.label-schema.vcs-ref: "${VCS_REF}"
