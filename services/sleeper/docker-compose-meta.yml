services:
  sleeper:
    build:
      labels:
        io.simcore.authors: '{"authors": [{"name": "Manuel Guidon", "email":
          "guidon@itis.swiss", "affiliation": "IT''IS Foundation"}, {"name":
          "Odei Maiz", "email": "maiz@itis.swiss", "affiliation": "IT''IS
          Foundation"}, {"name": "Andrei Neagu", "email": "neagu@itis.swiss",
          "affiliation": "IT''IS Foundation"}]}'
        io.simcore.contact: '{"contact": "maiz@itis.swiss"}'
        io.simcore.description: '{"description": "A service which awaits for time to
          pass, two times."}'
        io.simcore.inputs: '{"inputs": {"input_1": {"displayOrder": 1, "label": "File
          with int number", "description": "Pick a file containing only one
          integer", "type": "data:text/plain", "fileToKeyMap":
          {"single_number.txt": "input_1"}}, "input_2": {"displayOrder": 2,
          "label": "Sleep interval", "description": "Choose an amount of time to
          sleep", "type": "integer", "unit": "second", "defaultValue": 2},
          "input_3": {"displayOrder": 3, "label": "Fail after sleep",
          "description": "If set to true will cause service to fail after it
          sleeps", "type": "boolean", "defaultValue": false}, "input_4":
          {"displayOrder": 4, "label": "Distance to bed", "description": "It
          will first walk the distance to bed", "type": "integer", "unit":
          "meter", "defaultValue": 0}}}'
        io.simcore.integration-version: '{"integration-version": "1.0.0"}'
        io.simcore.key: '{"key": "simcore/services/comp/itis/sleeper"}'
        io.simcore.name: '{"name": "sleeper"}'
        io.simcore.outputs: '{"outputs": {"output_1": {"displayOrder": 1, "label": "File
          containing one random integer", "description": "Integer is generated
          in range [1-9]", "type": "data:text/plain", "fileToKeyMap":
          {"single_number.txt": "output_1"}}, "output_2": {"displayOrder": 2,
          "label": "Random sleep interval", "description": "Interval is
          generated in range [1-9]", "type": "integer", "unit": "second"}}}'
        io.simcore.type: '{"type": "computational"}'
        io.simcore.version: '{"version": "2.1.2"}'
        org.label-schema.build-date: ${BUILD_DATE}
        org.label-schema.schema-version: '1.0'
        org.label-schema.vcs-ref: ${VCS_REF}
        org.label-schema.vcs-url: https://github.com/ITISFoundation/osparc-services.git
        simcore.service.settings: '[{ "name": "constraints", "type": "string", "value":
          ["node.platform.os == linux"]}, {"name": "resources", "type":
          "resources", "value": { "Limits": { "NanoCPUs": 100000000,
          "MemoryBytes": 134217728 }}}]'
  sleeper-gpu:
    build:
      labels:
        io.simcore.authors: '{"authors": [{"name": "Manuel Guidon", "email":
          "guidon@itis.swiss", "affiliation": "IT''IS Foundation"}, {"name":
          "Odei Maiz", "email": "maiz@itis.swiss", "affiliation": "IT''IS
          Foundation"}, {"name": "Andrei Neagu", "email": "neagu@itis.swiss",
          "affiliation": "IT''IS Foundation"}]}'
        io.simcore.contact: '{"contact": "neagu@itis.swiss"}'
        io.simcore.description: '{"description": "A service which awaits for time to pass."}'
        io.simcore.inputs: '{"inputs": {"input_1": {"displayOrder": 1, "label": "File
          with int number", "description": "Pick a file containing only one
          integer", "type": "data:text/plain", "fileToKeyMap":
          {"single_number.txt": "input_1"}}, "input_2": {"displayOrder": 2,
          "label": "Sleep interval", "description": "Choose an amount of time to
          sleep", "type": "integer", "unit": "second", "defaultValue": 2},
          "input_3": {"displayOrder": 3, "label": "Fail after sleep",
          "description": "If set to true will cause service to fail after it
          sleeps", "type": "boolean", "defaultValue": false}, "input_4":
          {"displayOrder": 4, "label": "Distance to bed", "description": "It
          will first walk the distance to bed", "type": "integer", "unit":
          "meter", "defaultValue": 0}}}'
        io.simcore.integration-version: '{"integration-version": "1.0.0"}'
        io.simcore.key: '{"key": "simcore/services/comp/itis/sleeper-gpu"}'
        io.simcore.name: '{"name": "sleeper-gpu"}'
        io.simcore.outputs: '{"outputs": {"output_1": {"displayOrder": 1, "label": "File
          containing one random integer", "description": "Integer is generated
          in range [1-9]", "type": "data:text/plain", "fileToKeyMap":
          {"single_number.txt": "output_1"}}, "output_2": {"displayOrder": 2,
          "label": "Random sleep interval", "description": "Interval is
          generated in range [1-9]", "type": "integer", "unit": "second"}}}'
        io.simcore.type: '{"type": "computational"}'
        io.simcore.version: '{"version": "2.1.1"}'
        org.label-schema.build-date: ${BUILD_DATE}
        org.label-schema.schema-version: '1.0'
        org.label-schema.vcs-ref: ${VCS_REF}
        org.label-schema.vcs-url: https://github.com/ITISFoundation/osparc-services.git
        simcore.service.settings: '[{ "name": "constraints", "type": "string", "value":
          ["node.platform.os == linux"]},{"name": "Resources", "type":
          "Resources", "value": { "Limits": { "NanoCPUs": 100000000,
          "MemoryBytes": 134217728 }, "Reservations": { "GenericResources":
          [{"DiscreteResourceSpec": { "Kind": "VRAM", "Value": 1}}]}}}]'
  sleeper-mpi:
    build:
      labels:
        io.simcore.authors: '{"authors": [{"name": "Manuel Guidon", "email":
          "guidon@itis.swiss", "affiliation": "IT''IS Foundation"}, {"name":
          "Odei Maiz", "email": "maiz@itis.swiss", "affiliation": "IT''IS
          Foundation"}, {"name": "Andrei Neagu", "email": "neagu@itis.swiss",
          "affiliation": "IT''IS Foundation"}]}'
        io.simcore.contact: '{"contact": "neagu@itis.swiss"}'
        io.simcore.description: '{"description": "A service which awaits for time to pass."}'
        io.simcore.inputs: '{"inputs": {"input_1": {"displayOrder": 1, "label": "File
          with int number", "description": "Pick a file containing only one
          integer", "type": "data:text/plain", "fileToKeyMap":
          {"single_number.txt": "input_1"}}, "input_2": {"displayOrder": 2,
          "label": "Sleep interval", "description": "Choose an amount of time to
          sleep", "type": "integer", "unit": "second", "defaultValue": 2},
          "input_3": {"displayOrder": 3, "label": "Fail after sleep",
          "description": "If set to true will cause service to fail after it
          sleeps", "type": "boolean", "defaultValue": false}, "input_4":
          {"displayOrder": 4, "label": "Distance to bed", "description": "It
          will first walk the distance to bed", "type": "integer", "unit":
          "meter", "defaultValue": 0}}}'
        io.simcore.integration-version: '{"integration-version": "1.0.0"}'
        io.simcore.key: '{"key": "simcore/services/comp/itis/sleeper-mpi"}'
        io.simcore.name: '{"name": "sleeper-mpi"}'
        io.simcore.outputs: '{"outputs": {"output_1": {"displayOrder": 1, "label": "File
          containing one random integer", "description": "Integer is generated
          in range [1-9]", "type": "data:text/plain", "fileToKeyMap":
          {"single_number.txt": "output_1"}}, "output_2": {"displayOrder": 2,
          "label": "Random sleep interval", "description": "Interval is
          generated in range [1-9]", "type": "integer", "unit": "second"}}}'
        io.simcore.type: '{"type": "computational"}'
        io.simcore.version: '{"version": "2.1.1"}'
        org.label-schema.build-date: ${BUILD_DATE}
        org.label-schema.schema-version: '1.0'
        org.label-schema.vcs-ref: ${VCS_REF}
        org.label-schema.vcs-url: https://github.com/ITISFoundation/osparc-services.git
        simcore.service.settings: '[{ "name": "constraints", "type": "string", "value":
          ["node.platform.os == linux"]},{"name": "Resources", "type":
          "Resources", "value": { "Limits": { "NanoCPUs": 100000000,
          "MemoryBytes": 134217728 }, "Reservations": { "GenericResources":
          [{"DiscreteResourceSpec": { "Kind": "MPI", "Value": 1}}]}}}]'
version: '3.7'
