version: "3.7"
services:
  jupyter-base-notebook:
    image: ${DOCKER_REGISTRY}/jupyter-base-notebook:${DOCKER_IMAGE_TAG}
    # init: true
    build:
      context: ../../
      dockerfile: services/dy-jupyter/Dockerfile
      target: production
      args:
        BASE_IMAGE: jupyter/base-notebook:python-3.7.4
        INSTALL_PYTHON2: 1
      labels:
        io.simcore.key: '{"key": "simcore/services/dynamic/jupyter-base-notebook"}'
        io.simcore.version: '{"version": "${DOCKER_IMAGE_TAG}"}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.name: '{"name": "jupyter-base-notebook"}'
        io.simcore.description: '{"description": "Jupyter notebook"}'
        io.simcore.authors: '{"authors": [{"name": "sanderegg", "email": "anderegg@itis.swiss", "affiliation": "ITIS Foundation"}]}'
        io.simcore.contact: '{"contact": "anderegg@itis.swiss"}'
        io.simcore.inputs: '{"inputs": {
          "input_1":{"label": "input 1", "displayOrder":0, "description": "Input 1", "type": "data:*/*"},
          "input_2":{"label": "input 2", "displayOrder":1, "description": "Input 2", "type": "data:*/*"}
          }}'
        io.simcore.outputs: '{"outputs": {
          "output_1":{"label": "output 1", "displayOrder":0, "description": "Output 1", "type": "data:*/*"},
          "output_2":{"label": "output 2", "displayOrder":1, "description": "Output 2", "type": "data:*/*"}
          }}'
        simcore.service.settings: '[
          {"name": "ports", "type": "int", "value": 8888},
          {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]},
          {"name": "resources", "type": "resources", "value":
          {
          "Limits": {
          "NanoCPUs": 4000000000,
          "MemoryBytes": 8589934592
          }
          }
          }
          ]'
        # simcore.service.bootsettings: '[
        #   {"name": "entry_point", "type": "string", "value": "?token=simcore"}]'
        org.label-schema.schema-version: "1.0"
        org.label-schema.build-date: "${BUILD_DATE}"
        org.label-schema.vcs-url: "${VCS_URL}"
        org.label-schema.vcs-ref: "${VCS_REF}"
    ports:
      - "8888:8888"
  jupyter-scipy-notebook:
    image: ${DOCKER_REGISTRY}/jupyter-scipy-notebook:${DOCKER_IMAGE_TAG}
    init: true
    build:
      context: ../../
      dockerfile: services/dy-jupyter/Dockerfile
      target: production
      args:
        BASE_IMAGE: jupyter/scipy-notebook:31b807ec9e83
        INSTALL_PYTHON2: 1
      labels:
        io.simcore.key: '{"key": "simcore/services/dynamic/jupyter-scipy-notebook"}'
        io.simcore.version: '{"version": "${DOCKER_IMAGE_TAG}"}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.name: '{"name": "jupyter-scipy-notebook"}'
        io.simcore.description: '{"description": "Jupyter scipy notebook"}'
        io.simcore.authors: '{"authors": [{"name": "sanderegg", "email": "anderegg@itis.swiss", "affiliation": "ITIS Foundation"}]}'
        io.simcore.contact: '{"contact": "anderegg@itis.swiss"}'
        io.simcore.inputs: '{"inputs": {
          "input_1":{"label": "input 1", "displayOrder":0, "description": "Input 1", "type": "data:*/*"},
          "input_2":{"label": "input 2", "displayOrder":1, "description": "Input 2", "type": "data:*/*"}
          }}'
        io.simcore.outputs: '{"outputs": {
          "output_1":{"label": "output 1", "displayOrder":0, "description": "Output 1", "type": "data:*/*"},
          "output_2":{"label": "output 2", "displayOrder":1, "description": "Output 2", "type": "data:*/*"}
          }}'
        simcore.service.settings: '[
          {"name": "ports", "type": "int", "value": 8888},
          {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]},
          {"name": "resources", "type": "resources", "value":
          {
          "Limits": {
          "NanoCPUs": 4000000000,
          "MemoryBytes": 8589934592
          }
          }
          }
          ]'
        # simcore.service.bootsettings: '[
        #   {"name": "entry_point", "type": "string", "value": "?token=${NOTEBOOK_TOKEN}"}]'
        org.label-schema.schema-version: "1.0"
        org.label-schema.build-date: "${BUILD_DATE}"
        org.label-schema.vcs-url: "${VCS_URL}"
        org.label-schema.vcs-ref: "${VCS_REF}"
    ports:
      - "8889:8888"
  jupyter-r-notebook:
    image: ${DOCKER_REGISTRY}/jupyter-r-notebook:${DOCKER_IMAGE_TAG}
    init: true
    build:
      context: ../../
      dockerfile: services/dy-jupyter/Dockerfile
      target: production
      args:
        BASE_IMAGE: brajwa/r3.6.1-notebook
        INSTALL_PYTHON2: 0
      labels:
        io.simcore.key: '{"key": "simcore/services/dynamic/jupyter-r-notebook"}'
        io.simcore.version: '{"version": "${DOCKER_IMAGE_TAG}"}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.name: '{"name": "jupyter-r-notebook"}'
        io.simcore.description: '{"description": "Jupyter R notebook"}'
        io.simcore.authors: '{"authors": [{"name": "sanderegg", "email": "anderegg@itis.swiss", "affiliation": "ITIS Foundation"}]}'
        io.simcore.contact: '{"contact": "anderegg@itis.swiss"}'
        io.simcore.inputs: '{"inputs": {
          "input_1":{"label": "input 1", "displayOrder":0, "description": "Input 1", "type": "data:*/*"},
          "input_2":{"label": "input 2", "displayOrder":1, "description": "Input 2", "type": "data:*/*"}
          }}'
        io.simcore.outputs: '{"outputs": {
          "output_1":{"label": "output 1", "displayOrder":0, "description": "Output 1", "type": "data:*/*"},
          "output_2":{"label": "output 2", "displayOrder":1, "description": "Output 2", "type": "data:*/*"}
          }}'
        simcore.service.settings: '[
          {"name": "ports", "type": "int", "value": 8888},
          {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]},
          {"name": "resources", "type": "resources", "value":
          {
          "Limits": {
          "NanoCPUs": 4000000000,
          "MemoryBytes": 8589934592
          }
          }
          }
          ]'
        # simcore.service.bootsettings: '[
        #   {"name": "entry_point", "type": "string", "value": "?token=${NOTEBOOK_TOKEN}"}]'
        org.label-schema.schema-version: "1.0"
        org.label-schema.build-date: "${BUILD_DATE}"
        org.label-schema.vcs-url: "${VCS_URL}"
        org.label-schema.vcs-ref: "${VCS_REF}"
    ports:
      - "8890:8888"
